setwd("~/Syncplicity Folders/XINA/Bioconductor/GitHub/test/")
string_db <- STRINGdb$new( version="10", species=9606, score_threshold=0, input_directory="" )
string_db
net_stringDB <- string_db$graph
data(xina_example)
super_ds <- example_clusters$clusters
superset_string <- string_db$map(super_ds, "Accession")
colnames(superset_string) <- c("Accession", example_clusters$data_column, "Description", "Condition",
"Key", "Cluster", "STRING_id")
head(superset_string)
vertices <- as.vector(V(net_stringDB)$name)
# Get protein lists that are matched to the PPI network
prots <- unique(superset_string$STRING_id)
nodes <- c()
for (k in seq_len(length(prots))) {
nodes <- c(nodes, match(prots[k], vertices))
}
# Get a subnetwork using the matched proteins
subnet <- induced_subgraph(net_stringDB, nodes[!is.na(nodes)])
SIDs <- V(subnet)$name
sub_acc <- c()
sub_desc <- c()
for (k in seq_len(length(SIDs))) {
sub_tmp <- subset(superset_string, STRING_id==SIDs[k])
sub_acc <- c(sub_acc, as.vector(sub_tmp$Accession)[1])
sub_desc <- c(sub_desc, as.vector(sub_tmp$Description)[1])
}
V(subnet)$name <- sub_acc
V(subnet)$desc <- sub_desc
net_all <- subnet
write.csv(attr(E(net_all),"vnames"),"string_example.csv",row.names = FALSE)
library(XINA)
library(igraph)
library(STRINGdb)
setwd("~/Syncplicity Folders/XINA/Bioconductor/GitHub/test/")
string_db <- STRINGdb$new( version="10", species=9606, score_threshold=0, input_directory="" )
string_db
net_stringDB <- string_db$graph
data(xina_example)
super_ds <- example_clusters$clusters
superset_string <- string_db$map(super_ds, "Accession")
colnames(superset_string) <- c("Accession", example_clusters$data_column, "Description", "Condition",
"Key", "Cluster", "STRING_id")
head(superset_string)
vertices <- as.vector(V(net_stringDB)$name)
# Get protein lists that are matched to the PPI network
prots <- unique(superset_string$STRING_id)
nodes <- c()
for (k in seq_len(length(prots))) {
nodes <- c(nodes, match(prots[k], vertices))
}
# Get a subnetwork using the matched proteins
subnet <- induced_subgraph(net_stringDB, nodes[!is.na(nodes)])
SIDs <- V(subnet)$name
sub_acc <- c()
sub_desc <- c()
for (k in seq_len(length(SIDs))) {
sub_tmp <- subset(superset_string, STRING_id==SIDs[k])
sub_acc <- c(sub_acc, as.vector(sub_tmp$Accession)[1])
sub_desc <- c(sub_desc, as.vector(sub_tmp$Description)[1])
}
V(subnet)$name <- sub_acc
V(subnet)$desc <- sub_desc
net_all <- subnet
write.csv(attr(E(net_all),"vnames"),"string_example.csv",row.names = FALSE)
data(HPRD)
hprd_ppi
View(hprd_ppi)
ppi_db_hprd <- simplify(graph_from_data_frame(d=hprd_ppi, directed=FALSE), remove.multiple = FALSE, remove.loops = TRUE)
ppi_db_hprd
string_example <- read.csv("string_example.csv", header=T, as.is=T)
View(string_example)
string_example <- read.csv("string_example.csv", header=T, as.is=T)
save(string_example, file="string_example.RData", compress='xz')
library(XINA)
data("string_example")
data("string_example")
View(string_example)
data("string_example")
ppi_db_example <- simplify(graph_from_data_frame(d=string_example, directed=FALSE), remove.multiple = FALSE, remove.loops = TRUE)
head(string_example)
data(xina_example)
xina_result_example <- xina_analysis(example_clusters, ppi_db_example, is_stringdb=FALSE)
xina_result_example
xina_plots(xina_result, example_clusters)
xina_plots
xina_plot
xina_plot_all(xina_result, example_clusters)
xina_plot_all(xina_result_example, example_clusters)
data(string_example)
save(xina_result_example, file="xina_result_example.RData", compress='xz')
xina_result_example
data(xina_result_example)
load(xina_result_example)
xina_result_example
data("string_example")
data(xina_example)
ppi_db_example <- simplify(graph_from_data_frame(d=string_example, directed=FALSE), remove.multiple = FALSE, remove.loops = TRUE)
xina_result_example <- xina_analysis(example_clusters, ppi_db_example, is_stringdb=FALSE)
View(xina_result_example)
xina_result_example$Data
xina_result_example$Nodes
xina_result_example$Conditions
xina_result_example$Titles
xina_result_example$out_dir
xina_result_example$All_network
library(XINA)
library(XINA)
library(XINA)
library(STRINGdb)
data(xina_example)
tax_id <- 9606  # for human
string_db <- STRINGdb$new( version='10', species=tax_id, score_threshold=0, input_directory='' )
string_db
xina_result <- xina_analysis(example_clusters, string_db, flag_simplify=FALSE)
get_unknown_ppi_nodes(xina_result, 1)
data(string_example)
ppi_db_example <- simplify(graph_from_data_frame(d=string_example, directed=FALSE),
remove.multiple = FALSE, remove.loops = TRUE)
xina_result <- xina_analysis(example_clusters, ppi_db_example, is_stringdb=FALSE)
example_clusters
ppi_db_example
xina_result <- xina_analysis(example_clusters, ppi_db_example, is_stringdb=FALSE)
xina_result
get_unknown_ppi_nodes(xina_result, 1)
data(xina_result_example)
get_unknown_ppi_nodes(xina_result_example, 1)
xina_result_example
setwd("~/Syncplicity Folders/XINA/Bioconductor/GitHub/test/")
string_db <- STRINGdb$new( version="10", species=9606, score_threshold=0, input_directory="" )
string_db
net_stringDB <- string_db$graph
data(xina_example)
super_ds <- example_clusters$clusters
superset_string <- string_db$map(super_ds, "Accession")
colnames(superset_string) <- c("Accession", example_clusters$data_column, "Description", "Condition",
"Key", "Cluster", "STRING_id")
head(superset_string)
vertices <- as.vector(V(net_stringDB)$name)
# Get protein lists that are matched to the PPI network
prots <- unique(superset_string$STRING_id)
nodes <- c()
for (k in seq_len(length(prots))) {
nodes <- c(nodes, match(prots[k], vertices))
}
# Get a subnetwork using the matched proteins
subnet <- induced_subgraph(net_stringDB, nodes[!is.na(nodes)])
SIDs <- V(subnet)$name
sub_acc <- c()
sub_desc <- c()
for (k in seq_len(length(SIDs))) {
sub_tmp <- subset(superset_string, STRING_id==SIDs[k])
sub_acc <- c(sub_acc, as.vector(sub_tmp$Accession)[1])
sub_desc <- c(sub_desc, as.vector(sub_tmp$Description)[1])
}
V(subnet)$name <- sub_acc
V(subnet)$desc <- sub_desc
net_all <- subnet
write.csv(attr(E(net_all),"vnames"),"string_example.csv",row.names = FALSE)
data("string_example")
ppi_db_example <- simplify(graph_from_data_frame(d=string_example, directed=FALSE), remove.multiple = FALSE, remove.loops = TRUE)
xina_result_example <- xina_analysis(example_clusters, ppi_db_example, is_stringdb=FALSE, flag_simplify=FALSE)
xina_plot_all(xina_result_example, example_clusters)
save(xina_result_example, file="xina_result_example.RData", compress='xz')
library(STRINGdb)
data(xina_example)
data(xina_result_example)
get_unknown_ppi_nodes(xina_result_example, 1)
library(STRINGdb)
library(Biobase)
data(xina_example)
data(xina_result_example)
subgroup <- subset(example_clusters$aligned, Stimulus2==21)
protein_list <- subgroup$`Gene name`
xina_result <- xina_result_example
xina_plot_single(xina_result, protein_list)
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
E(xina_result$All_network)
attr(E(xina_result$All_network), "description")
attr(E(xina_result$All_network), "desc")
V(xina_result$All_network)$desc
V(xina_result$All_network)$name
data(xina_example)
string_db
data(xina_example)
tax_id <- 9606
string_db <- STRINGdb$new( version='10', species=tax_id, score_threshold=0, input_directory='' )
string_db
xina_result <- xina_analysis(example_clusters, string_db, flag_simplify=FALSE)
save(xina_result_example, file="xina_result_example.RData", compress='xz')
save(xina_result, file="xina_result_example.RData", compress='xz')
data(xina_example)
data(xina_result_example)
get_unknown_ppi_nodes(xina_result_example, 1)
data(xina_example)
data(xina_result_example)
xina_result <- xina_resul_example
data(xina_result_example)
xina_result <- xina_result_example
subgroup <- subset(example_clusters$aligned, Stimulus2==21)
protein_list <- subgroup$`Gene name`
xina_plot_single(xina_result, protein_list)
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
V(subnet)
V(subnet)$desc
V(subnet)$name
eigen_info <- xina_plot_single(xina_result_example, protein_list, centrality_type='Eigenvector')
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
V(subnet)$desc
string_db <- STRINGdb$new( version='10', species=tax_id, score_threshold=0, input_directory='' )
string_db
xina_result <- xina_analysis(example_clusters, string_db, flag_simplify=FALSE)
subgroup <- subset(example_clusters$aligned, Stimulus2==21)
protein_list <- subgroup$`Gene name`
eigen_info <- xina_plot_single(xina_result, protein_list, centrality_type='Eigenvector')
data(xina_result_example)
eigen_info <- xina_plot_single(xina_result_example, protein_list, centrality_type='Eigenvector')
eigen_info <- xina_plot_single(xina_result_example, protein_list, centrality_type='Eigenvector')
xina_result_example$Sub_network[[21]]
V(xina_result_example$Sub_network[[21]])$desc
V(xina_result$Sub_network[[21]])$desc
V(xina_result_example$Sub_network[[1]])$desc
V(xina_result_example$All_network)$desc
xina_result_example <- xina_result
save(xina_result_example, file="xina_result_example.RData", compress='xz')
data(xina_result_example)
eigen_info <- xina_plot_single(xina_result_example, protein_list, centrality_type='Eigenvector')
xina_result <- xina_result_example
xina_plot_bycluster(xina_result, example_clusters, cl=1)
xina_plot_bycluster(xina_result, example_clusters, cl=1, condition='Control')
xina_plot_all(xina_result, example_clusters)
xina_plot_all(xina_result, example_clusters, condition='Control')
data(xina_example)
data(xina_result_example)
subgroup <- subset(example_clusters$aligned, Stimulus2==21)
protein_list <- subgroup$`Gene name`
xina_plot_single(xina_result_example, protein_list)
eigen_info <- xina_plot_single(xina_result_example, protein_list, centrality_type='Eigenvector')
data(xina_example)
data(xina_result_example)
xina_plot_bycluster(xina_result_example, example_clusters, cl=1)
xina_plot_bycluster(xina_result_example, example_clusters, cl=1, condition='Control')
xina_plot_all(xina_result, example_clusters)
xina_plot_all(xina_result, example_clusters, condition='Control')
xina_plot_all(xina_result_example, example_clusters)
xina_plot_all(xina_result_example, example_clusters, condition='Control')
data(xina_example)
write.csv(example_clusters$aligned,"xina_clusters_aligned.csv")
example_clusters_reloaded <- load_previous_results(".")
data(xina_example)
data(HPRD)
net_all <- simplify(graph_from_data_frame(d=hprd_ppi, directed=F),
remove.multiple = F, remove.loops = T)
xina_result <- xina_analysis(example_clusters, net_all, is_stringdb=FALSE)
xina_result <- xina_analysis(example_clusters, net_all, is_stringdb=FALSE, flag_simplify=FALSE)
xina_result
